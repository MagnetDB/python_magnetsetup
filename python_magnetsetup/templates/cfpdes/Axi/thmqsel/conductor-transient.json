{
    "j_th":"-sigma*U/2/pi/x:sigma:U:x",

    "magnetic_c":"x/mu:x:mu",
    "magnetic_beta":"{2/mu,0}:mu",
    "magnetic_f":"j_th*x*x:j_th:x",
    "magnetic_d":"sigma*x:x:sigma",

    "heat_c":"k*x:k:x",
    "heat_f":"sigma*(U/(2*pi)+magnetic_dphi_dt)*(U/(2*pi)+magnetic_dphi_dt)/x:sigma:U:magnetic_dphi_dt:x",
    "heat_d":"rho*Cp*x:rho:Cp:x",
    
    "Lame_lambda":"E*nu/(1-2*nu)/(1+nu):E:nu",  
    "Lame_mu":"E/(2*(1+nu)):E:nu",

    "F_laplace":"{1/x*j_th*magnetic_grad_phi_0,1/x*j_th*magnetic_grad_phi_1}:x:j_th:magnetic_grad_phi_0:magnetic_grad_phi_1",
    "sigma_T":"-(3*Lame_lambda+2*Lame_mu)*alphaT*(heat_T-T0):Lame_lambda:Lame_mu:alphaT:heat_T:T0",   

    "sigma_rr":"(Lame_lambda+2*Lame_mu)*elastic1_grad_u_00+Lame_lambda/x*elastic1_u_0+Lame_lambda*elastic1_grad_u_11+bool_dilatation*sigma_T:x:Lame_lambda:Lame_mu:elastic1_u_0:elastic1_grad_u_00:elastic1_grad_u_11:bool_dilatation:sigma_T",
    "sigma_thth":"Lame_lambda*elastic1_grad_u_00+(Lame_lambda+2*Lame_mu)/x*elastic1_u_0+Lame_lambda*elastic1_grad_u_11+bool_dilatation*sigma_T:x:Lame_lambda:Lame_mu:elastic1_u_0:elastic1_grad_u_00:elastic1_grad_u_11:bool_dilatation:sigma_T",
    "sigma_zz":"Lame_lambda*elastic1_grad_u_00+Lame_lambda/x*elastic1_u_0+(Lame_lambda+2*Lame_mu)*elastic1_grad_u_11+bool_dilatation*sigma_T:x:Lame_lambda:Lame_mu:elastic1_u_0:elastic1_grad_u_00:elastic1_grad_u_11:bool_dilatation:sigma_T",
    "sigma_rz":"Lame_mu*(elastic1_grad_u_01+elastic1_grad_u_10):Lame_mu:elastic1_grad_u_01:elastic1_grad_u_10",

    "elastic1_d":"rho*x:rho:x",
    "elastic1_f":"{x*elastic2_v_0,x*elastic2_v_1}:x:elastic2_v_0:elastic2_v_1",

    "elastic2_d":"x:x",
    "elastic2_gamma":"{-sigma_rr*x, -sigma_rz*x, -sigma_rz*x, -sigma_zz*x}:x:sigma_rr:sigma_rz:sigma_zz",
    "elastic2_f":"{bool_laplace*x*F_laplace_0 - sigma_thth,bool_laplace*x*F_laplace_1}:x:bool_laplace:F_laplace_0:sigma_thth:F_laplace_1",

    "sigma_1":"1/2*(sigma_rr+sigma_zz+sqrt((sigma_rr-sigma_zz)*(sigma_rr-sigma_zz)+4*sigma_rz*sigma_rz)):sigma_rr:sigma_zz:sigma_rz",
    "sigma_2":"sigma_thth:sigma_thth",
    "sigma_3":"1/2*(sigma_rr+sigma_zz-sqrt((sigma_rr-sigma_zz)*(sigma_rr-sigma_zz)+4*sigma_rz*sigma_rz)):sigma_rr:sigma_zz:sigma_rz"
}
